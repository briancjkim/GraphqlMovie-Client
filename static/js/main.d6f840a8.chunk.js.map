{"version":3,"sources":["globalStyles.js","apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","index.js"],"names":["createGlobalStyle","_templateObject","reset","console","log","process","client","ApolloClient","uri","HOME_PAGE","gql","queries_templateObject","MOVIE_DETAILS","_templateObject2","Card","styled","div","Movie_templateObject","props","concat","background","Title","span","Movie_templateObject2","Movie","_ref","id","title","rating","poster","react_default","a","createElement","Link","to","Container","Home_templateObject","Home","_useQuery","useQuery","data","error","loading","Helmet","movies","map","movie","src_Movie","key","medium_cover_image","Detail_templateObject","Image","Detail_templateObject2","withComponent","h1","_templateObject3","Paragraph","_templateObject4","bold","MovieContainer","_templateObject5","Detail","movieId","match","params","react_apollo_browser_umd","query","variables","parseInt","_ref2","Fragment","Detail_Container","src","Detail_Title","description_intro","suggestions","App","ApolloContext","HashRouter","Route","path","exact","component","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d6f840a8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\ncreateGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\r\n  ${reset};\r\n  body{\r\n    font-family: 'Maven Pro', sans-serif;\r\n    background-color: #ecf0f1;\r\n  }\r\n  a{\r\n      color:inherit;\r\n  }\r\n  main {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n  }\r\n`;\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nconsole.log(isDev);\r\nconst client = new ApolloClient({\r\n  uri: isDev ? \"http://localhost:4000\" : \"https://graphqlmovie.herokuapp.com/\"\r\n});\r\n\r\nexport default client;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const HOME_PAGE = gql`\r\n  {\r\n    movies(limit: 10, rating: 7) {\r\n      id\r\n      title\r\n      genres\r\n      rating\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MOVIE_DETAILS = gql`\r\n  query getMovieDetails($movieId: Int!) {\r\n    movie(id: $movieId) {\r\n      id\r\n      medium_cover_image\r\n      title\r\n      rating\r\n      description_intro\r\n      language\r\n      genres\r\n    }\r\n    suggestions(id: $movieId) {\r\n      id\r\n      medium_cover_image\r\n      title\r\n      rating\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\nborder-radius: 15px;\r\nbox-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\nbackground-image: ${props => `url(${props.background})`};\r\nbackground-size: cover;\r\nbackground-position: center center;\r\nheight: 300px;\r\nwidth: 200px;\r\nmargin-bottom: 40px;\r\nposition: relative;\r\n\r\n`;\r\n\r\nconst Title = styled.span`\r\n  background-color: white;\r\n  width: auto;\r\n  padding: 10px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  position: absolute;\r\n  bottom: 25px;\r\n  left: 0;\r\n  right: 0;\r\n   margin: auto;\r\n`;\r\n\r\nconst Movie = ({ id, title, rating, poster }) => (\r\n  <Link to={`/details/${id}`}>\r\n    <Card background={poster}>\r\n      <Title>\r\n        {title} / {rating}⭐️\r\n      </Title>\r\n    </Card>\r\n  </Link>\r\n);\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  poster: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { HOME_PAGE } from './queries';\r\nimport Movie from './Movie';\r\nimport { useQuery } from 'react-apollo-hooks';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n  display:grid;\r\n  grid-template-columns:repeat(3, 0.7fr);\r\n  flex-wrap: wrap;\r\n  justify-items:center;\r\n  color:red;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { data, error, loading } = useQuery(HOME_PAGE);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Home | MovieQL</title>\r\n      </Helmet>\r\n      {loading && \"Loading\"}\r\n      {error && \"Something is wrong\"}\r\n      {!loading &&\r\n        data &&\r\n        data.movies &&\r\n        data.movies.map(movie => (\r\n          <Movie\r\n            id={movie.id}\r\n            key={movie.id}\r\n            poster={movie.medium_cover_image}\r\n            title={movie.title}\r\n            rating={movie.rating}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { MOVIE_DETAILS } from \"./queries\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Movie from \"./Movie\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  background-color: white;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst Image = Card.withComponent(\"img\");\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Paragraph = styled.span`\r\n  margin-bottom: 10px;\r\n  display: block;\r\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\r\n`;\r\n\r\nconst MovieContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 0.7fr);\r\n  flex-wrap: wrap;\r\n  justify-items: center;\r\n  margin-top: 50px;\r\n`;\r\n\r\n\r\nconst Detail = ({\r\n  match: {\r\n    params: { movieId }\r\n  }\r\n}) => (\r\n  <Query query={MOVIE_DETAILS} variables={{movieId: parseInt(movieId) }}>\r\n    {({ loading, error, data }) => {\r\n      if (loading)\r\n        return (\r\n          <React.Fragment>\r\n            <Helmet>\r\n              <title>Loading | MovieQL</title>\r\n            </Helmet>\r\n            loading\r\n          </React.Fragment>\r\n        );\r\n      if (error) return \"error\";\r\n      return (\r\n        <React.Fragment>\r\n          <Container>\r\n            <Helmet>\r\n              <title>{data.movie.title} | MovieQL</title>\r\n            </Helmet>\r\n            <Image src={data.movie.medium_cover_image} />\r\n            <span>\r\n              <Title>{data.movie.title}</Title>\r\n              <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\r\n              <Paragraph>{data.movie.description_intro}</Paragraph>\r\n            </span>\r\n          </Container>\r\n          <Title>Suggested</Title>\r\n          <MovieContainer>\r\n            {data.suggestions.map(movie => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                rating={movie.rating}\r\n                poster={movie.medium_cover_image}\r\n              />\r\n            ))}\r\n          </MovieContainer>\r\n        </React.Fragment>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default Detail;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks';\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <ApolloHooksProvider client={client}>\n        <Router>\n            <main>\n              <Route path={\"/\"} exact={true} component={Home}/>\n              <Route path={\"/details/:movieId\"} component={Detail} />\n            </main>\n        </Router>\n        </ApolloHooksProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './globalStyles';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}